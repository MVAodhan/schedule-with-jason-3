generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Episode {
  id                  Int      @id @default(autoincrement())
  sanityId            String
  date                String
  description         String
  twitter_desc        String?
  guest               Json?
  twitter             String
  name                String      
  tags                Json?
  slug                String
  title               String
  uri                 String
  timezone            String?
  chapters            String?
  links               Json?
  tech                String?
  demo                String?
  repo                String?
  twitter_description String?
  yt_live_link        String?
  schedule_tweet      Boolean?
  ninety_minute_tweet Boolean?
  live_tweet          Boolean?
  discord_event       Boolean?
  calendar_event      Boolean?
  website             Boolean?
}

model Schedule {
  id                  Int    @id @default(autoincrement())
  date                String
  description         String
  guest_name          String
  guest_twitter       String
  twitter_description String
  title               String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
